ggplot(COVID.2019, aes(as.Date(Date, format="%d/%m/%Y"), Cumulative.confirmed)) + geom_line()
ggplot(COVID.2019, aes(as.Date(Date, format="%d/%m/%Y"), Cumulative.confirmed, The.existing.severe)) + geom_line()
data <- economics
View(data)
set.seed(1234)
year <- rep(1990:2015, times = 2)
type <- rep(c('A','B'),each = 26)
value <- c(runif(26),runif(26, min = 1,max = 1.5))
df <- data.frame(year = year, type = type, value = value)
View(df)
ggplot(COVID.2019, aes(as.Date(Date, format="%d/%m/%Y"), The.new.diagnosis)) + geom_line()
ggplot(COVID.2019, aes(as.Date(Date, format="%d/%m/%Y"), Cumulative.confirmed)) + geom_line()
ggplot(COVID.2019, aes(as.Date(Date, format="%d/%m/%Y"), The.new.diagnosis)) + geom_line()
library(ggplot2)
data <- "/Users/chenliang/Documents/写的材料/汕头大学-教学/双语课程-大数据可视化/2020PPT与教案/第5-6节课/scripts/Examination-02231-0002-Data.txt"
file <- "/Users/chenliang/Documents/写的材料/汕头大学-教学/双语课程-大数据可视化/2020PPT与教案/第5-6节课/scripts/Examination-02231-0002-Data.txt"
data <- read.delim(file, header = T)
View(data)
names(data)
iron.blood.test.data <- data.frame(subject = data$SEQN, sex = factor(data$HSSEX), age = data$HSAGEIR ,
red.blood.cell.count = data$RCPSI, hemoglobin = data$HGPSI,
hematocrit=data$HTPSI, serum.iron = data$FEPSI, serum.ferritin = data$FRPSI,
serum.transferrin.saturation = data$PXP,
serum.TIBC = data$TIPSI, c.reactive.protein = data$CRP)
# 8888 in the data matrix means "Blank but applicable"
index <- which(data$FRPSI == 8888)
data$FRPSI[index]  = NA
index <- which(data$RCPSI == 8888.00)
data$RCPSI[index] = NA
index<-which(data$HGPSI == 88888.00)
data$HGPSI[index] = NA
index <- which(data$HTPSI ==88888.00)
data$HTPSI[index] = NA
index<-which(data$FEPSI == 88888.00)
data$FEPSI[index] = NA
index <- which(data$PXP == 8888.0)
data$PXP[index] = NA
index <- which(data$TIPSI == 888888.00)
data$TIPSI[index] = NA
index <- which(data$CRP == 88888)
data$CRP[index] = NA
iron.blood.test.data <- data.frame(subject = data$SEQN, sex = factor(data$HSSEX), age = data$HSAGEIR ,
red.blood.cell.count = data$RCPSI, hemoglobin = data$HGPSI,
hematocrit=data$HTPSI, serum.iron = data$FEPSI, serum.ferritin = data$FRPSI,
serum.transferrin.saturation = data$PXP,
serum.TIBC = data$TIPSI, c.reactive.protein = data$CRP)
data <- read.delim(file, header = T,sep="\t")
# 8888 in the data matrix means "Blank but applicable"
index <- which(data$FRPSI == 8888)
data$FRPSI[index]  = NA
index <- which(data$RCPSI == 8888.00)
data$RCPSI[index] = NA
index<-which(data$HGPSI == 88888.00)
data$HGPSI[index] = NA
index <- which(data$HTPSI ==88888.00)
data$HTPSI[index] = NA
index<-which(data$FEPSI == 88888.00)
data$FEPSI[index] = NA
index <- which(data$PXP == 8888.0)
data$PXP[index] = NA
index <- which(data$TIPSI == 888888.00)
data$TIPSI[index] = NA
index <- which(data$CRP == 88888)
data$CRP[index] = NA
index <- which(data$FRPSI == 8888)
data$FRPSI[index]  = NA
index
length(data$FRPSI)
length(data$SEQN)
length(data$HSSEX)
length(data$FRPSI)
data <- read.table(file = file, header = T, sep="\t")
index <- which(data$FRPSI == 8888)
data$FRPSI[index]  = NA
index <- which(data$RCPSI == 8888.00)
data$RCPSI[index] = NA
index<-which(data$FEPSI == 88888.00)
data$FEPSI[index] = NA
data$FRPSI
names(data)
file <- "/Users/chenliang/Documents/写的材料/汕头大学-教学/双语课程-大数据可视化/2020PPT与教案/第5-6节课/scripts/Laboratory-02231-0010-Data.txt"
data <- read.delim(file, header = T,sep="\t")
# 8888 in the data matrix means "Blank but applicable"
index <- which(data$FRPSI == 8888)
data$FRPSI[index]  = NA
index <- which(data$RCPSI == 8888.00)
data$RCPSI[index] = NA
index<-which(data$HGPSI == 88888.00)
data$HGPSI[index] = NA
index <- which(data$HTPSI ==88888.00)
data$HTPSI[index] = NA
index<-which(data$FEPSI == 88888.00)
data$FEPSI[index] = NA
index <- which(data$PXP == 8888.0)
data$PXP[index] = NA
index <- which(data$TIPSI == 888888.00)
data$TIPSI[index] = NA
index <- which(data$CRP == 88888)
data$CRP[index] = NA
iron.blood.test.data <- data.frame(subject = data$SEQN,
sex = factor(data$HSSEX),
age = data$HSAGEIR ,
red.blood.cell.count = data$RCPSI,
hemoglobin = data$HGPSI,
hematocrit=data$HTPSI,
serum.iron = data$FEPSI,
serum.ferritin = data$FRPSI,
serum.transferrin.saturation = data$PXP,
serum.TIBC = data$TIPSI,
c.reactive.protein = data$CRP)
file <- "/Users/chenliang/Documents/写的材料/汕头大学-教学/双语课程-大数据可视化/2020PPT与教案/3-作业代码/第三次作业/Laboratory-02231-0010-Data.txt"
data <- read.delim(file, header = T,sep="\t")
# 8888 in the data matrix means "Blank but applicable"
index <- which(data$FRPSI == 8888)
data$FRPSI[index]  = NA
index <- which(data$RCPSI == 8888.00)
data$RCPSI[index] = NA
index<-which(data$HGPSI == 88888.00)
data$HGPSI[index] = NA
index <- which(data$HTPSI ==88888.00)
data$HTPSI[index] = NA
index<-which(data$FEPSI == 88888.00)
data$FEPSI[index] = NA
index <- which(data$PXP == 8888.0)
data$PXP[index] = NA
index <- which(data$TIPSI == 888888.00)
data$TIPSI[index] = NA
index <- which(data$CRP == 88888)
data$CRP[index] = NA
iron.blood.test.data <- data.frame(subject = data$SEQN,
sex = factor(data$HSSEX),
age = data$HSAGEIR ,
red.blood.cell.count = data$RCPSI,
hemoglobin = data$HGPSI,
hematocrit=data$HTPSI,
serum.iron = data$FEPSI,
serum.ferritin = data$FRPSI,
serum.transferrin.saturation = data$PXP,
serum.TIBC = data$TIPSI,
c.reactive.protein = data$CRP)
write.table(iron.blood.test.data,
file = "/Users/chenliang/Documents/写的材料/汕头大学-教学/双语课程-大数据可视化/2020PPT与教案/3-作业代码/第三次作业/Laboratory-filtered.txt")
?write.table
write.table(iron.blood.test.data,
sep = "\t",
row.names = F,
file = "/Users/chenliang/Documents/写的材料/汕头大学-教学/双语课程-大数据可视化/2020PPT与教案/3-作业代码/第三次作业/Laboratory-filtered.txt")
write.table(iron.blood.test.data,
sep = "\t",
row.names = F,
qmethod = "escape",
file = "/Users/chenliang/Documents/写的材料/汕头大学-教学/双语课程-大数据可视化/2020PPT与教案/3-作业代码/第三次作业/Laboratory-filtered.txt")
file <- "/Users/chenliang/Documents/写的材料/汕头大学-教学/双语课程-大数据可视化/2020PPT与教案/3-作业代码/第三次作业/blood.data.txt"
data <- read.delim(file, header = T,sep="\t")
View(data)
ggplot(data , aes( x = age, y = hemoglobin , colour = sex))+
geom_point(alpha = 0.05) +
theme_bw()
sex.label <- seq("Male", length(data$sex))
sex.label <- seq("Male", length(data$sex))
length(data$sex)
?seq
sex.label <- rep("Male", length(data$sex))
index <- which(data$sex == 1)
sex.label[index] <- "Female"
data <- cbind(data, sex.label)
View(data)
ggplot(data , aes( x = age, y = hemoglobin , colour = sex.label))+
geom_point() +
theme_bw()
file <- "/Users/chenliang/Documents/写的材料/汕头大学-教学/双语课程-大数据可视化/2020PPT与教案/3-作业代码/第三次作业/blood.data.txt"
data <- read.delim(file, header = T,sep="\t")
##########
sex.label <- rep("Female", length(data$sex))
index <- which(data$sex == 1)
sex.label[index] <- "Male"
data <- cbind(data, sex.label)
ggplot(data , aes( x = age, y = hemoglobin , colour = sex.label))+
geom_point() +
theme_bw()
ggplot(data , aes( x = age, y = hemoglobin , colour = sex.label))+
geom_point()
ggplot(data , aes( x = age, y = hemoglobin , colour = sex.label))+
geom_point(alpha = 0.05) +
theme_bw()
ggplot(data , aes( x = age, y = hemoglobin , colour = sex.label))+
geom_point(alpha = 0.05) +
theme_bw() +
stat_smooth(size = 1, level = 0.99)
ggplot(data , aes( x = age, y = hemoglobin , colour = sex.label))+
geom_point(alpha = 0.05) +
theme_bw() +
theme(legend.justification=c(0,1), legend.position=c(0,1))+
scale_x_continuous(limits=c(0,90),breaks=seq(0,90,10)) +
scale_colour_hue(name="", breaks=c('1','2'), labels=c('men','women')) +
stat_smooth(size = 1, level = 0.99)
ggplot(data , aes( x = age, y = hemoglobin , colour = sex.label))+
geom_point(alpha = 0.05) +
theme_bw() +
theme(legend.justification=c(0,1), legend.position=c(0,1))+
stat_smooth(size = 1, level = 0.99)
ggplot(data , aes( x = age, y = hemoglobin , colour = sex.label))+
geom_point(alpha = 0.05) +
theme_bw() +
theme(legend.justification=c(1,1), legend.position=c(1,1))+
stat_smooth(size = 1, level = 0.99)
str(data$sex.label)
View(data)
# 清除所有变量
rm(list=ls())
mpg
str(mpg)
data <- mpg
# 清除所有变量
rm(list=ls())
mpg
data <- mpg
# 清除所有变量
rm(list=ls())
mpg
data <- mpg
View(data)
ggplot(mpg, aes(x = displ, y = hwy)) + geom_point()
ggplot(mpg, aes(displ, hwy)) +
geom_point()
ggplot(mpg, aes(displ, hwy, size = cyl) ) +
geom_point()
ggplot(mpg, aes(displ, hwy, shape = drv) ) +
geom_point()
ggplot(mpg, aes(displ, hwy, colour = class) ) +
geom_point()
ggplot(mpg, aes(displ, hwy)) + geom_point(colour = "blue")
#################### facet ###############################################################
ggplot(mpg, aes(displ, hwy)) + geom_point() + facet_wrap(~class)
ggplot(mpg, aes(displ, hwy,colour = class)) + geom_point() + facet_wrap(~class)
ggplot(mpg, aes(displ, hwy, colour = class) ) +
geom_point()
ggplot(mpg, aes(displ, hwy,colour = class)) + geom_point() + facet_wrap(~class)
ggplot(mpg, aes(displ, hwy)) +
geom_point() +
geom_smooth(method = "lm")
ggplot(mpg, aes(drv, hwy)) + geom_point()
ggplot(mpg, aes(drv, hwy)) + geom_jitter()
ggplot(mpg, aes(drv, hwy)) + geom_boxplot()
ggplot(mpg, aes(displ, fill = drv)) + geom_histogram(binwidth = 0.5) + facet_wrap(~drv, ncol = 1)
ggplot(mpg, aes(displ, fill = drv)) + geom_histogram(binwidth = 0.5) + facet_wrap(~drv, nrow = 1)
data.file <- "/Users/chenliang/Documents/写的材料/汕头大学-教学/双语课程-大数据可视化/2020PPT与教案/第5-6节课/scripts/data_tab.txt"
COVID.2019 <- read.delim(data.file, header = T, stringsAsFactors = T)
ggplot(COVID.2019, aes(as.Date(Date, format = "%d/%m/%Y"), The.new.diagnosis)) + geom_path()
data.file <- "/Users/chenliang/Documents/写的材料/汕头大学-教学/双语课程-大数据可视化/2020PPT与教案/第5-6节课/scripts/data_tab.txt"
COVID.2019 <- read.delim(data.file, header = T, stringsAsFactors = T)
# 日期
# 累计确诊
# 现有确诊（含重症）
# 现有疑似
# 现有重症
# 累计死亡
# 累计治愈
# 累计确诊+现有疑似
# 新增确诊
# 新增疑似
# 新增(疑似+确诊)
# 死亡/确诊
# 观察中
# 更新时间
# 备注
# rename the collumn names
colnames(COVID.2019) <- c(
"Date",
"Cumulative.confirmed",
"Current.diagnosis.including.severe.disease",
"Existing.suspected",
"The.existing.severe",
"The.cumulative.death",
"The.cumulative.cure",
"Cumulative.confirmed.and.suspected",
"The.new.diagnosis",
"New.suspected",
"New.suspected.and.confirmed)",
"Death.and.diagnosis",
"Observation",
"Update.Date",
"note"
)
ggplot(COVID.2019, aes(as.Date(Date, format="%d/%m/%Y"), Cumulative.confirmed)) + geom_line()
ggplot(COVID.2019, aes(as.Date(Date, format = "%d/%m/%Y"), The.new.diagnosis)) + geom_line()
ggplot(COVID.2019, aes(as.Date(Date, format = "%d/%m/%Y"), The.new.diagnosis)) + geom_path()
ggplot(COVID.2019, aes(as.Date(Date, format = "%d/%m/%Y"), The.new.diagnosis)) + geom_path()
View(COVID.2019)
?read.delim
data.file <- "/Users/chenliang/Documents/写的材料/汕头大学-教学/双语课程-大数据可视化/2020PPT与教案/第5-6节课/scripts/data_tab.txt"
COVID.2019 <- read.delim(data.file, header = T, stringsAsFactors = T, encoding = "UTF-8")
View(COVID.2019)
library("ggplot2")
# 清除所有变量
rm(list=ls())
mpg
mpg
str(mpog)
str(mpg)
data <- mpg
View(data)
ggplot(mpg, aes(displ, hwy)) + geom_point() + facet_wrap(~class)
ggplot(mpg, aes(displ, hwy,colour = class)) + geom_point() + facet_wrap(~class)
ggplot(mpg, aes(displ, hwy, colour = class) ) +
geom_point()
ggplot(mpg, aes(displ, hwy)) +
geom_point()
+
geom_smooth()
ggplot(mpg, aes(displ, hwy)) +
geom_point() +
geom_smooth()
ggplot(mpg, aes(displ, hwy)) +
geom_point() +
geom_smooth(se=FALSE)
ggplot(mpg, aes(displ, hwy)) +
geom_point() +
geom_smooth(span = 0.2)
ggplot(mpg, aes(displ, hwy)) +
geom_point() +
geom_smooth(span = 1)
View(data)
ggplot(mpg, aes(hwy)) + geom_histogram()
ggplot(mpg, aes(hwy)) + geom_freqpoly()
ggplot(mpg, aes(manufacturer)) + geom_bar()
drugs <- data.frame(drug = c(" drug1", " drug2", " drug3"),
effect = c(14.2, 19.7, 16.1) )
View(drugs)
ggplot(drugs, aes(drug, effect)) + geom_bar()
ggplot(drugs, aes(drug, effect)) + geom_bar(stat = "identity")
data.file <- "/Users/chenliang/Documents/写的材料/汕头大学-教学/双语课程-大数据可视化/2020PPT与教案/第5-6节课/scripts/data_tab.txt"
COVID.2019 <- read.delim(data.file, header = T, stringsAsFactors = T)
View(COVID.2019)
?colnames
colnames(COVID.2019)
colnames(COVID.2019) <- c(
"Date",
"Cumulative.confirmed",
"Current.diagnosis.including.severe.disease",
"Existing.suspected",
"The.existing.severe",
"The.cumulative.death",
"The.cumulative.cure",
"Cumulative.confirmed.and.suspected",
"The.new.diagnosis",
"New.suspected",
"New.suspected.and.confirmed)",
"Death.and.diagnosis",
"Observation",
"Update.Date",
"note"
)
View(COVID.2019)
ggplot(COVID.2019, aes(as.Date(Date, format="%d/%m/%Y"), Cumulative.confirmed)) + geom_line()
str(COVID.2019$Date)
as.xxXX
ggplot(COVID.2019, aes(as.Date(Date, format = "%d/%m/%Y"), The.new.diagnosis)) + geom_line()
ggplot(mpg,aes(xlab(displ),ylab(hwy)))
ggplot(mpg, aes(displ, hwy, colour = class) ) +
geom_point()+xlab(1)+ylab(2)
ggplot(mpg,aes(displ,hwy,xlab="驱动"，ylab=“公路”))
ggplot(mpg,aes(displ,hwy,xlab="驱动"，ylab="公路"))
ggplot(mpg,aes(displ,hwy,xlab="驱动",ylab="公路"))
# ggplot(mpg,aes(displ,hwy,xlab="驱动",ylab="公路"))
ggplot(mpg,aes(displ,hwy,xlab="驱动",ylab="公路"))+geom_point()
# ggplot(mpg,aes(displ,hwy,xlab="驱动",ylab="公路"))
ggplot(mpg,aes(displ,hwy,xlab="aa",ylab="bb"))+geom_point()
ggplot(mpg, aes(displ, hwy)) +
geom_point() +
xlab("发动机排量") + ylab("油耗")
ggplot(mpg,aes(hwy,drv,xlab="hwy", ylab="drv"))+geom_boxplot()
ggplot(mpg,aes(xlab(displ),ylab(hwy)))
ggplot(mpg, aes(displ, hwy, colour = class) ) +
geom_point() +
xlab(1)+
ylab(2)
ggplot(mpg, aes(displ, hwy)) + geom_point(colour = "blue") + xlab("A") + ylab("B")
ggplot(mpg,aes(displ,hwy,xlab="aa",ylab="bb"))+geom_point()
ggplot(mpg, aes(displ, hwy)) +
geom_point() +
xlab("发动机排量") + ylab("油耗")
ggplot(mpg,aes(hwy,drv,xlab="hwy", ylab="drv"))+geom_boxplot()
path <- getwd()
path
space.file <- paste(path,"/","data_space.txt", sep="")
tab.file <- paste(path,"/","data_tab.txt", sep="")
csv.file <- paste(path,"/","data.csv", sep="")
kages("ggplot2")
# 载入ggplot2
library("ggplot2")
# 清除所有变量
rm(list=ls())
mpg
str(mpg)
data <- mpg
ggplot(mpg, aes(x = displ, y = hwy))
ggplot(mpg, aes(displ, hwy, shape = drv) ) +
geom_point()
ggplot(mpg, aes(drv, hwy)) + geom_jitter()
ggplot(mpg, aes(drv, hwy)) + geom_boxplot()
ggplot(mpg, aes(drv, hwy)) + geom_violin()
# 载入ggplot2
library("ggplot2")
# 清除所有变量
rm(list=ls())
########## Read data ############################################################
path <- getwd()
?getwd
?read.delim
path <- getwd()
path
space.file <- paste(path,"/","data_space.txt", sep="")
space.file
space.data <- read.delim(space.file, sep = " ", header = T)
space.file <- paste(path,"/","data_space.txt", sep="")
tab.file <- paste(path,"/","data_tab.txt", sep="")
csv.file <- paste(path,"/","data.csv", sep="")
space.data <- read.delim(space.file, sep = " ", header = T)
# 清除所有变量
rm(list=ls())
########## Read data ############################################################
# getwd returns an absolute filepath representing the current working directory
path <- getwd()
space.file <- paste(path,"/","data_space.txt", sep="")
tab.file <- paste(path,"/","data_tab.txt", sep="")
csv.file <- paste(path,"/","data.csv", sep="")
space.data <- read.delim(space.file, sep = " ", header = T)
tab.data <- read.delim(tab.file, sep = "\t", header = TRUE)
tab.data <- read.delim(tab.file, sep = "\t", header = F)
csv.data <- read.delim(csv.file, sep = ",", header = T)
View(tab.data)
csv.data <- read.delim(csv.file, sep = ",", header = T)
# 安装ggplot2
# install.packages("ggplot2")
# 载入ggplot2
library("ggplot2")
# 清除所有变量
rm(list=ls())
########## Read data ############################################################
# getwd returns an absolute filepath representing the current working directory
path <- getwd()
space.file <- paste(path,"/","data_space.txt", sep="")
tab.file <- paste(path,"/","data_tab.txt", sep="")
csv.file <- paste(path,"/","data.csv", sep="")
space.data <- read.delim(space.file, sep = " ", header = T)
tab.data <- read.delim(tab.file, sep = "\t", header = TRUE)
tab.data <- read.delim(tab.file, sep = "\t", header = F)
csv.data <- read.delim(csv.file, sep = ",", header = T)
str(tab.data)
ls()
# 载入ggplot2
library("ggplot2")
# 清除所有变量
rm(list=ls())
mpg
str(mpg)
data <- mpg
View(data)
ggplot(mpg, aes(x = displ, y = hwy))
ggplot(mpg, aes(x = displ, y = hwy)) +
geom_point()
ggplot(mpg, aes(displ, hwy, size = cyl) ) +
geom_point()
ggplot(mpg, aes(displ, hwy, shape = drv) ) +
geom_point()
ggplot(mpg, aes(displ, hwy, colour = class) ) +
geom_point()
source('~/Documents/写的材料/汕头大学-教学/0-数据可视化/2021PPT与教案/4-PPT/第4周-第5-6节课-20120316/scripts/Script.R')
data.file <- "/Users/chenliang/Documents/写的材料/汕头大学-教学/0-数据可视化/2021PPT与教案/4-PPT/第4周-第5-6节课-20120316/scripts/data_tab.txt"
COVID.2019 <- read.delim(data.file, header = T, stringsAsFactors = T)
View(COVID.2019)
c(
"Date",
"Cumulative.confirmed",
"Current.diagnosis.including.severe.disease",
"Existing.suspected",
"The.existing.severe",
"The.cumulative.death",
"The.cumulative.cure",
"Cumulative.confirmed.and.suspected",
"The.new.diagnosis",
"New.suspected",
"New.suspected.and.confirmed)",
"Death.and.diagnosis",
"Observation",
"Update.Date",
"note"
)
colnames(COVID.2019) <- c(
"Date",
"Cumulative.confirmed",
"Current.diagnosis.including.severe.disease",
"Existing.suspected",
"The.existing.severe",
"The.cumulative.death",
"The.cumulative.cure",
"Cumulative.confirmed.and.suspected",
"The.new.diagnosis",
"New.suspected",
"New.suspected.and.confirmed)",
"Death.and.diagnosis",
"Observation",
"Update.Date",
"note"
)
ggplot(COVID.2019, aes(as.Date(Date, format="%d/%m/%Y"), Cumulative.confirmed)) + geom_line()
ggplot(COVID.2019, aes(as.Date(Date, format = "%d/%m/%Y"), The.new.diagnosis)) + geom_line()
ggplot(mpg, aes(displ, hwy, colour = class) ) +
geom_point() +
xlab(1)+
ylab(2)
