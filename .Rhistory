process_data[1, 'date']
str_sub(process_data[1, 'date'], start=1, end=5)
str_sub(process_data[1, 'date'], start=1, end=4)
str_sub(process_data[1, 'date'], start=6, end=8)
str_sub(process_data[1, 'date'], start=6, end=7)
process_data[1, 'date']
library("ggplot2")
library("dplyr")
library("data.table")
library("stringr")
getwd()
data = data.frame(read.csv("D:/R_code/owid-covid-data.csv"))
need_data = select(data,
location,                 # 地区
date,                     # 日期
new_cases,                # 新增病例
new_vaccinations,           # 新增疫苗
)
america_data = filter(need_data, location == "North America")
china_data = filter(need_data, location == "China")
japan_data = filter(need_data, location == "Japan")
uk_data = filter(need_data, location == "United Kingdom")
india_data = filter(need_data, location == "India")
process_data = rbind(america_data, china_data, japan_data, uk_data, india_data)
ggplot(process_data, aes(as.Date(date, format = "%Y-%m-%d"), total_cases,
color = location, size = total_cases)) + geom_line()
process_data[is.na(process_data)] = 0
for(i in 1:nrow(process_data)){
tmp1 = str_sub(process_data[i, 'date'], start=1, end=4)
tmp2 = str_sub(process_data[i, 'date'], start=6, end=7)
process_data[i, 'date'] = paste(tmp1, tmp2, seq="")
integer(process_data[i, 'date'])
integer(process_data[i, 'new_cases'])
integer(process_data[i, 'new_vaccinations'])
if(process_data[i, 'new_cases'] > process_data[i, 'new_vaccinations']){
process_data[i, 'new_vaccinations'] = 'Bad'
}else {
process_data[i, 'new_vaccinations'] = 'Good'
}
}
names(process_data) = c('location', 'date', 'new_cases', 'indicators')
fin_data = aggregate(x=process_data$new_cases, by=list(process_data$location, process_data$date, process_data$indicators), FUN=sum)
names(fin_data) = c('location', 'date', 'indicators', 'new_cases')
save(fin_data, file = 'D:\\R_code\\shinyWebsite\\data\\statistics\\fin_data.Rdata')
process_data[is.na(process_data)] = 0
for(i in 1:nrow(process_data)){
tmp1 = str_sub(process_data[i, 'date'], start=1, end=4)
tmp2 = str_sub(process_data[i, 'date'], start=6, end=7)
process_data[i, 'date'] = paste(tmp1, tmp2, seq="")
integer(process_data[i, 'date'])
integer(process_data[i, 'new_cases'])
integer(process_data[i, 'new_vaccinations'])
if(process_data[i, 'new_cases'] > process_data[i, 'new_vaccinations']){
process_data[i, 'new_vaccinations'] = 'Bad'
}else {
process_data[i, 'new_vaccinations'] = 'Good'
}
}
tmp1 = str_sub(process_data[i, 'date'], start=1, end=4)
tmp2 = str_sub(process_data[i, 'date'], start=6, end=7)
process_data[i, 'date'] = paste(tmp1, tmp2, seq="")
paste(tmp1, tmp2, seq="")
process_data[i, 'date'] = paste(tmp1, tmp2)
paste(tmp1, tmp2)
process_data[i, 'date'] = paste(tmp1, tmp2, collapse = '')
paste(tmp1, tmp2)
paste(tmp1, tmp2, collapse = ' ')
process_data[i, 'date'] = paste(tmp1, tmp2, collapse = "")
paste(tmp1, tmp2, collapse = "")
paste(tmp1, tmp2,seq='', collapse = "")
tmp2
length(tmp2)
length(tmp1)
paste(tmp1,tmp2,seq='', collapse = "")
paste(tmp1,tmp2, collapse = "")
str_sub(process_data[i, 'date'], start=6, end=7)
tmp1 = str_sub(process_data[i, 'date'], start=1, end=5)
tmp1
str_sub(process_data[i, 'date'], start=1, end=4)
process_data[i, 'date'] = paste(tmp1,tmp2, collapse = "")
process_data[i, 'date']
tmp1 = str_sub(process_data[i, 'date'], start=1, end=4)
tmp2 = str_sub(process_data[i, 'date'], start=6, end=7)
process_data[i, 'date'] = paste(tmp1,tmp2, collapse = "")
str_join(tmp1,tmp2, collapse = "")
library("stringr")
str_join(tmp1,tmp2, collapse = "")
str_c(tmp1,tmp2, collapse = "")
str_c(tmp1,tmp2)
tmp1 = str_sub(process_data[i, 'date'], start=1, end=4)
tmp2 = str_sub(process_data[i, 'date'], start=6, end=7)
str_c(tmp1,tmp2)
tmp1
tmp2
tmp2 = str_sub(process_data[i, 'date'], start=5, end=7)
tmp2
process_data[i, 'date'] = '2020-01-01'
tmp2 = str_sub(process_data[i, 'date'], start=5, end=7)
tmp2
tmp2 = str_sub(process_data[i, 'date'], start=6, end=7)
tmp2
tmp1
str_c(tmp1,tmp2)
integer(process_data[i, 'date'])
process_data[i, 'date'] = str_c(tmp1,tmp2)
integer(process_data[i, 'date'])
library("ggplot2")
library("dplyr")
library("data.table")
library("stringr")
getwd()
data = data.frame(read.csv("D:/R_code/owid-covid-data.csv"))
need_data = select(data,
location,                 # 地区
date,                     # 日期
new_cases,                # 新增病例
new_vaccinations,           # 新增疫苗
)
america_data = filter(need_data, location == "North America")
china_data = filter(need_data, location == "China")
japan_data = filter(need_data, location == "Japan")
uk_data = filter(need_data, location == "United Kingdom")
india_data = filter(need_data, location == "India")
process_data = rbind(america_data, china_data, japan_data, uk_data, india_data)
ggplot(process_data, aes(as.Date(date, format = "%Y-%m-%d"), total_cases,
color = location, size = total_cases)) + geom_line()
process_data[is.na(process_data)] = 0
for(i in 1:nrow(process_data)){
tmp1 = str_sub(process_data[i, 'date'], start=1, end=4)
tmp2 = str_sub(process_data[i, 'date'], start=5, end=7)
process_data[i, 'date'] = str_c(tmp1,tmp2)
integer(process_data[i, 'date'])
integer(process_data[i, 'new_cases'])
integer(process_data[i, 'new_vaccinations'])
if(process_data[i, 'new_cases'] > process_data[i, 'new_vaccinations']){
process_data[i, 'new_vaccinations'] = 'Bad'
}else {
process_data[i, 'new_vaccinations'] = 'Good'
}
}
names(process_data) = c('location', 'date', 'new_cases', 'indicators')
fin_data = aggregate(x=process_data$new_cases, by=list(process_data$location, process_data$date, process_data$indicators), FUN=sum)
names(fin_data) = c('location', 'date', 'indicators', 'new_cases')
save(fin_data, file = 'D:\\R_code\\shinyWebsite\\data\\statistics\\fin_data.Rdata')
tmp1 = str_sub(process_data[i, 'date'], start=1, end=4)
tmp2 = str_sub(process_data[i, 'date'], start=5, end=7)
process_data[i, 'date'] = str_c(tmp1,tmp2)
process_data[i, 'date']
tmp2
library("ggplot2")
library("dplyr")
library("data.table")
library("stringr")
getwd()
data = data.frame(read.csv("D:/R_code/owid-covid-data.csv"))
need_data = select(data,
location,                 # 地区
date,                     # 日期
new_cases,                # 新增病例
new_vaccinations,           # 新增疫苗
)
america_data = filter(need_data, location == "North America")
china_data = filter(need_data, location == "China")
japan_data = filter(need_data, location == "Japan")
uk_data = filter(need_data, location == "United Kingdom")
india_data = filter(need_data, location == "India")
process_data = rbind(america_data, china_data, japan_data, uk_data, india_data)
ggplot(process_data, aes(as.Date(date, format = "%Y-%m-%d"), total_cases,
color = location, size = total_cases)) + geom_line()
process_data[is.na(process_data)] = 0
for(i in 1:nrow(process_data)){
tmp1 = str_sub(process_data[i, 'date'], start=1, end=4)
tmp2 = str_sub(process_data[i, 'date'], start=6, end=7)
process_data[i, 'date'] = str_c(tmp1,tmp2)
integer(process_data[i, 'date'])
integer(process_data[i, 'new_cases'])
integer(process_data[i, 'new_vaccinations'])
if(process_data[i, 'new_cases'] > process_data[i, 'new_vaccinations']){
process_data[i, 'new_vaccinations'] = 'Bad'
}else {
process_data[i, 'new_vaccinations'] = 'Good'
}
}
names(process_data) = c('location', 'date', 'new_cases', 'indicators')
fin_data = aggregate(x=process_data$new_cases, by=list(process_data$location, process_data$date, process_data$indicators), FUN=sum)
names(fin_data) = c('location', 'date', 'indicators', 'new_cases')
save(fin_data, file = 'D:\\R_code\\shinyWebsite\\data\\statistics\\fin_data.Rdata')
View(fin_data)
runApp('shinyWebsite')
View(final_data)
View(fin_data)
View(fin_data)
shiny::runApp('shinyWebsite')
runApp('shinyWebsite')
runApp('shinyWebsite')
runApp('shinyWebsite')
library("ggplot2")
library("dplyr")
library("data.table")
library("stringr")
getwd()
data = data.frame(read.csv("D:/R_code/owid-covid-data.csv"))
need_data = select(data,
location,                 # 地区
date,                     # 日期
new_cases,                # 新增病例
new_vaccinations,           # 新增疫苗
)
america_data = filter(need_data, location == "North America")
china_data = filter(need_data, location == "China")
japan_data = filter(need_data, location == "Japan")
uk_data = filter(need_data, location == "United Kingdom")
india_data = filter(need_data, location == "India")
process_data = rbind(america_data, china_data, japan_data, uk_data, india_data)
ggplot(process_data, aes(as.Date(date, format = "%Y-%m-%d"), total_cases,
color = location, size = total_cases)) + geom_line()
process_data[is.na(process_data)] = 0
for(i in 1:nrow(process_data)){
tmp1 = str_sub(process_data[i, 'date'], start=1, end=4)
tmp2 = str_sub(process_data[i, 'date'], start=6, end=7)
process_data[i, 'date'] = str_c(tmp1,tmp2)
integer(process_data[i, 'date'])
integer(process_data[i, 'new_cases'])
integer(process_data[i, 'new_vaccinations'])
if(process_data[i, 'new_cases'] > process_data[i, 'new_vaccinations']){
process_data[i, 'new_vaccinations'] = 'Bad'
}else {
process_data[i, 'new_vaccinations'] = 'Good'
}
}
names(process_data) = c('location', 'date', 'new_cases', 'indicators')
fin_data = aggregate(x=process_data$new_cases, by=list(process_data$location, process_data$date, process_data$indicators), FUN=sum)
names(fin_data) = c('location', 'date', 'indicators', 'new_cases')
save(final_data, file = 'D:\\R_code\\shinyWebsite\\data\\statistics\\final_data.Rdata')
save(final_data, file = 'D:\\R_code\\shinyWebsite\\data\\statistics\\final_data.Rdata')
library("ggplot2")
library("dplyr")
library("data.table")
getwd()
data = data.frame(read.csv("D:/R_code/owid-covid-data.csv"))
need_data = select(data,
location,                 # 地区
date,                     # 日期
total_cases,              # 总病例
new_cases,                # 新增病例
total_cases_per_million,  # 每一百万人的总病例
new_cases_per_million,    # 每一百万人的新增病例
total_deaths,             # 总死亡病例
new_deaths,               # 新增死亡病例
total_deaths_per_million, # 每一百万人的总死亡病例
new_deaths_per_million,   # 每一百万人的新增死亡病例
total_vaccinations,       # 总疫苗接种数量
people_vaccinated,        # 总人类疫苗接种数量
)
america_data = filter(need_data, location == "North America")
china_data = filter(need_data, location == "China")
japan_data = filter(need_data, location == "Japan")
uk_data = filter(need_data, location == "United Kingdom")
india_data = filter(need_data, location == "India")
process1_data = rbind(america_data, china_data, japan_data, uk_data, india_data)
runApp('shinyWebsite')
runApp('shinyWebsite')
runApp('shinyWebsite')
runApp('shinyWebsite')
runApp('shinyWebsite')
runApp('shinyWebsite')
runApp('shinyWebsite')
runApp('shinyWebsite')
runApp('shinyWebsite')
runApp('shinyWebsite')
runApp('shinyWebsite')
library("ggplot2")
library("dplyr")
library("data.table")
getwd()
data = data.frame(read.csv("D:/R_code/owid-covid-data.csv"))
need_data = select(data,
location,                 # 地区
date,                     # 日期
total_cases,              # 总病例
new_cases,                # 新增病例
total_cases_per_million,  # 每一百万人的总病例
new_cases_per_million,    # 每一百万人的新增病例
total_deaths,             # 总死亡病例
new_deaths,               # 新增死亡病例
total_deaths_per_million, # 每一百万人的总死亡病例
new_deaths_per_million,   # 每一百万人的新增死亡病例
total_vaccinations,       # 总疫苗接种数量
people_vaccinated,        # 总人类疫苗接种数量
)
america_data = filter(need_data, location == "North America")
china_data = filter(need_data, location == "China")
japan_data = filter(need_data, location == "Japan")
uk_data = filter(need_data, location == "United Kingdom")
india_data = filter(need_data, location == "India")
process1_data = rbind(america_data, china_data, japan_data, uk_data, india_data)
save(process1_data, file = 'D:\\R_code\\shinyWebsite\\data\\statistics\\process1_data.Rdata')
data<-read.csv("see.csv" ,header = T);
library("ggplot2")
df<-data.frame(expand.grid(1:3,1:4))
df1 <- data.frame(expand.grid(1:3,1:4))
df1$xx <- (1:12)
df1$point<-(1)
df2 <- df
df2$point <-(2)
df2$xx <- (0)
df3 <- df
df3$point <-(3)
df3$xx <- (1:12)
df4 <- df
df4$point <-(4)
df4$xx <- (1:12)
df5 <- df
df5$point <-(5)
df5$xx <- (1:12)
df6 <- df
df6$point <-(6)
df6$xx <- (0)
df7 <- df
df7$point <-(7)
df7$xx <- (0)
df8 <- df
df8$point <-(8)
df8$xx <- (0)
df9 <- df
df9$point <-(9)
df9$xx <- (0)
df10 <- df
df10$point <-(10)
df10$xx <- (0)
df00 <- rbind(df1,df2,df3,df4,df5,df6,df7,df8,df9,df10)
x1 = c(1,2,0,0,0,0,0,8,9,10,11,12)
x1 = unlist(xx)
df11<-df
df11$xx <- 0
df11$point <- 11
df12<-df
df12$xx <- 0
df12$point <- 12
df13<-df
df13$xx <- x1
df13$point <- 13
df14<-df
df14$xx <- 0
df14$point <- 14
df15<-df
df15$xx <- 0
df15$point <- 15
df16<-df
df16$xx <- x1
df16$point <- 16
df17<-df
df17$xx <- 0
df17$point <- 17
df18<-df
df18$xx <- x1
df18$point <- 18
df19<-df
df19$xx <- 0
df19$point <- 19
df110<-df
df110$xx <- 0
df110$point <- 20
df01 <- rbind(df11,df12,df13,df14,df15,df16,df17,df18,df19,df110)
x2<-c(0,0,0,0,0,6,7,8,9,10,11,12)
x2<-unlist(x2)
df21<-df
df21$xx <- 0
df21$point <- 21
df22<-df
df22$xx <- x2
df22$point <- 22
df23<-df
df23$xx <- 0
df23$point <- 23
df24<-df
df24$xx <- 0
df24$point <- 24
df25<-df
df25$xx <- 0
df25$point <- 25
df26<-df
df26$xx <- 0
df26$point <- 26
df27<-df
df27$xx <- x2
df27$point <- 27
df28<-df
df28$xx <- 0
df28$point <- 28
df29<-df
df29$xx <- x2
df29$point <- 29
df210<-df
df210$xx <- x2
df210$point <- 30
df02 <- rbind(df21,df22,df23,df24,df25,df26,df27,df28,df29,df210)
x3 <-c(1,2,3,0,5,6,7,8,9,10,11,12)
df31<-df
df31$xx <- 0
df31$point <- 31
df32<-df
df32$xx <- x3
df32$point <- 32
df33<-df
df33$xx <- x3
df33$point <- 33
df34<-df
df34$xx <- 0
df34$point <- 34
df35<-df
df35$xx <- 0
df35$point <- 35
df36<-df
df36$xx <- 0
df36$point <- 36
df37<-df
df37$xx <- 0
df37$point <- 37
df38<-df
df38$xx <- x3
df38$point <- 38
df39<-df
df39$xx <- 0
df39$point <- 39
df310<-df
df310$xx <- 0
df310$point <- 40
df03 <- rbind(df31,df32,df33,df34,df35,df36,df37,df38,df39,df310)
x4 <-c(1,2,3,0,5,6,7,8,0,0,0,0)
df41<-df
df41$xx <- x4
df41$point <- 41
df42<-df
df42$xx <- x4
df42$point <- 42
df43<-df
df43$xx <- x4
df43$point <- 43
df44<-df
df44$xx <- x4
df44$point <- 44
df45<-df
df45$xx <- x4
df45$point <- 45
df46<-df
df46$xx <- 0
df46$point <- 46
df47<-df
df47$xx <- x4
df47$point <- 47
df48<-df
df48$xx <- x4
df48$point <- 48
df49<-df
df49$xx <- 0
df49$point <- 49
df410<-df
df410$xx <- 0
df410$point <- 50
df04 <- rbind(df41,df42,df43,df44,df45,df46,df47,df48,df49,df410)
x5<-c(0,2,0,0,0,6,7,8,0,0,0,0)
df51<-df
df51$xx <- 0
df51$point <- 51
df52<-df
df52$xx <- 0
df52$point <- 52
df53<-df
df53$xx <- x5
df53$point <- 53
df54<-df
df54$xx <- 0
df54$point <- 54
df55<-df
df55$xx <- x5
df55$point <- 55
df56<-df
df56$xx <- 0
df56$point <- 56
df57<-df
df57$xx <- 0
df57$point <- 57
df58<-df
df58$xx <- x5
df58$point <- 58
df59<-df
df59$xx <- 0
df59$point <- 59
df510<-df
df510$xx <- 0
df510$point <- 60
df05 <- rbind(df51,df52,df53,df54,df55,df56,df57,df58,df59,df510)
dftotal <- rbind(df00,df01,df02,df03,df04,df05)
ggplot(dftotal,aes(x = Var1,y = Var2,fill = factor(xx))) +
geom_tile() + geom_point(shape=20) +
scale_fill_manual(values = c("gray", "red", "green", "blue", "brown",
"cyan", "gold", "white", "plum", "magenta",
"orange", "purple","pink"))+
facet_wrap(.~point,ncol = 10,nrow = 6)
print("利用自带的数据集进行一些研究")
install.packages("Rglpk")
library('Rglpk')
obj = c(2, 4, 3)
mat = matrix(c(3, 2, 1, 4, 1, 3, 2, 2, 2), nrow = 3)
dir = c('<=', '<=', '<=')
rhs = c(60 ,40, 80)
max = TRUE
types = c('I', 'I', 'I')
Rglpk_slove_LP(obj, mat, dir, rhs, types = types, max = max)
Rglpk_solve_LP(obj, mat, dir, rhs, types = types, max = max)
View(mat)
